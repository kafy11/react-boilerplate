{"version":3,"sources":["webpack:///./src/themes/index.js","webpack:///./src/routers/PrivateRoute.js","webpack:///./src/actions/websocket.js","webpack:///./src/pages/Splash/index.js","webpack:///./src/routers/index.js","webpack:///./src/reducers/query.js","webpack:///./src/reducers/websocket.js","webpack:///./src/store/configureStore.js","webpack:///./src/websocket.js","webpack:///./src/app.js","webpack:///./src/components/Select.js","webpack:///./src/components/Tabs.js","webpack:///./src/components/Table.js","webpack:///./src/components/Header.js","webpack:///./src/components/Loading.js","webpack:///./src/components/index.js","webpack:///./src/pages/Error/index.js","webpack:///./src/actions/query.js"],"names":["theme","white","black","light","success","danger","primary","secondary","warning","grayscale","xsmall","small","regular","big","medium","large","xlarge","connect","state","company","websocket","name","_ref","Component","component","rest","_objectWithoutProperties","react_default","a","createElement","react_router_dom_es","_extends","props","to","connectServer","conn","type","listCompanies","companies","connectCompany","id","Background","styled","div","_templateObject","palette","Text","span","_templateObject2","font","sizes","spacing","SelectContainer","_templateObject3","Splash","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleChangeCompany","option","setState","companySelected","startConnectCompany","value","JSON","parse","sessionStorage","getItem","indexOf","history","push","pathname","message","dist_default","color","fadeIn","options","map","ID_COMPANY_PK","label","COMPANY_NAME","components","placeholder","onChange","mapDispatchToProps","dispatch","getState","send","action","frontAction","createHistory","basename","BASENAME","MiniToad","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","Error","resolve","AppRouter","path","exact","routers_PrivateRoute","query","arguments","length","undefined","_objectSpread","data","running","data_obj","running_obj","data_ddl","running_ddl","websocket_objectSpread","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","src_websocket","_asyncToGenerator","regeneratorRuntime","mark","_callee","store","wrap","_context","prev","next","WebSocket","sent","onopen","stringify","src_websocket_objectSpread","onmessage","toAction","response","from","setData","setDataObj","setDataGetDDL","status","stop","_x","apply","createStore","combineReducers","queryReducer","websocketReducer","applyMiddleware","thunk","jsx","es","styled_components_browser_esm","routers","ReactDOM","render","document","getElementById","connectWebsocket","Select","react_select_esm","Container","Tabs_templateObject","Tabs","getActiveTab","activeTab","toggle","tab","onChangeTab","React","tabs","i","reactstrap_es","className","tabId","key","content","_this2","classnames","active","onClick","navContent","renderTabNav","renderTabContent","Table","lib","Object","keys","column","renderTableHeader","row","j","renderTableBody","CenterContent","Header_templateObject","Header","components_Header","leftContent","centerContent","rightContent","SpinnerContainer","Loading_templateObject","_ref2","Loading","_ref3","d","__webpack_exports__","Tabs_Tabs","WarnIcon","ErrorPage","location","react__WEBPACK_IMPORTED_MODULE_0___default","react_icons_fa__WEBPACK_IMPORTED_MODULE_3__","startSelect","startQuery","startListObjects","startGetDDL","_getState$websocket","_getState$websocket2","_getState$websocket3","concat","object","_getState$websocket4"],"mappings":"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","file":"js/main.52d68c83e71940a2c419.js","sourcesContent":["const theme = {};\n\n//cores do tema\ntheme.palette = {\n    white: \"#FFF\",\n    black: \"#000\",\n    light: \"#ecf0f1\",\n    success: \"#28a745\",\n    danger: \"#dc3545\",\n    primary: \"#007bff\",\n    secondary: \"#6c757d\",\n    warning: \"#ffc107\",\n    grayscale: [\"#bdc3c7\",\"#7f8c8d\",\"#95a5a6\"]\n};\n\n//tamanhos de fonte\ntheme.sizes = {\n    xsmall: '10px',\n    small: '12px',\n    regular: '14px',\n    big: '18px'\n};\n\n//tamanhos de padding/margin\ntheme.spacing = {\n    xsmall: 4,\n    small: 8,\n    medium: 16,\n    large: 32,\n    xlarge: 64,\n};\n\n//fonte\ntheme.font = \"Segoe UI, Helvetica, Arial, sans-serif\";\n\nexport default theme;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({ company, component: Component, ...rest }) => (\n    <Route {...rest} component={(props) => (\n        company ? (\n            <Component {...props} />\n        ) : (\n            <Redirect to=\"/\" />\n        )\n    )} \n    />\n);\n\nconst mapStateToProps = (state) => ({\n    company: state.websocket.name\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","// ações do reducer websocket\n\n//define a global da conexão\nexport const connectServer = (conn) => ({\n    type: 'CONNECT_SERVER',\n    conn\n});\n\n//dispara a ação no websocket de conectar na empresa\nexport const startConnectCompany = (id) => {\n    return (dispatch, getState) => {\n        const conn = getState().websocket.conn;\n\n        conn.send({\n            action: 'getname',\n            frontAction: 'connectCompany',\n            to: id\n        });\n    }\n};\n\n//dispara a ação no websocket de listar empresas conectadas\nexport const startListCompanies = () => {\n    return (dispatch, getState) => {\n        const conn = getState().websocket.conn;\n\n        conn.send({\n            action: 'listCompanies',\n            frontAction: 'listCompanies'\n        });\n    }\n};\n\n//define a global de lista de empresas\nexport const listCompanies = (companies) => ({\n    type: 'SET_COMPANIES_LIST',\n    companies\n});\n\n//define a global do nome da empresa\nexport const connectCompany = (id, name) => ({\n    type: 'CONNECT_COMPANY',\n    id, \n    name\n});","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Spinner from 'react-spinkit';\nimport { connect } from 'react-redux';\nimport theme from '../../themes';\nimport Error from '../Error';\nimport { startConnectCompany } from '../../actions/websocket';\nimport { Select } from '../../components';\n\n//fundo azul da página\nconst Background = styled.div`\n    background-color: ${theme.palette.primary};\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: ${theme.palette.white};\n`;\n\n//texto estilizado\nconst Text = styled.span`\n    color: ${theme.palette.white};\n    font-family: ${theme.font};\n    font-size: ${theme.sizes.regular};\n    margin-top: ${theme.spacing.large}px;\n`;\n\nconst SelectContainer = styled.div`\n    width: 500px;\n    max-width: 50%;\n`;\n\n/* state: \n    id: id da empresa selecionada no select,\n    companies: empresas para o select \n*/\n/* props:\n    company - nome da empresa (para validar se conseguiu pegar já)\n    error - mensagem de erro\n*/\nclass Splash extends Component{\n    constructor(props){\n        super(props);\n        this.state = {};\n\n        const permissions = JSON.parse(sessionStorage.getItem('permissions') || '[]');\n\n        if(permissions.indexOf('WEBSOCKET') == -1) {\n            props.history.push({\n                pathname: '/error', \n                state: {\n                    message: 'Você não possui permissão para acessar'\n                } \n            });\n        }\n    }\n\n    componentDidUpdate(){\n        //se a empresa foi conectada, redireciona para o minitoad\n        if(this.props.company){\n            this.props.history.push('/minitoad');\n        }\n    }\n\n    //handle para o change do select de empresas\n    handleChangeCompany = (option) => {\n        this.setState(() => ({ companySelected: option }), () => this.props.startConnectCompany(option.value));\n    }\n\n    render() {\n        const { companies } = this.props;\n\n        //se empresa foi selecionada\n        if(this.state.companySelected) {\n            return (\n                <Background>\n                    <Spinner \n                        name=\"ball-scale-ripple-multiple\" \n                        color={theme.palette.white} \n                        fadeIn=\"none\"\n                    />\n    \n                    <Text>Tentando conectar com a empresa</Text>\n                </Background>\n            );\n        //se foi carregado a lista de empresas\n        } else if(companies) {\n            const options = companies.map((company) => ({\n                value: company.ID_COMPANY_PK,\n                label: company.COMPANY_NAME\n            }));\n\n            return (\n                <Background>\n                    <SelectContainer>\n                        <Select \n                            placeholder=\"Empresa\"\n                            options={options}\n                            onChange={this.handleChangeCompany}\n                        />\n                    </SelectContainer>\n                </Background>\n            )\n        }\n\n        return (\n            <Background>\n                <Spinner \n                    name=\"ball-scale-ripple-multiple\" \n                    color={theme.palette.white} \n                    fadeIn=\"none\"\n                />\n\n                <Text>Pegando lista de empresas</Text>\n            </Background>\n        );\n    }\n}\n\n//passa o state global para os props\nconst mapStateToProps = (state) => ({\n    companies: state.websocket.companies,\n    company: state.websocket.name,\n});\n\n//passa os disparadores das ações por props\nconst mapDispatchToProps = {\n    startConnectCompany,\n};\n\n//exporta o component com redux\nexport default connect(mapStateToProps, mapDispatchToProps)(Splash);","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport Loadable from 'react-loadable';\nimport PrivateRoute from './PrivateRoute';\nimport Splash from '../pages/Splash';\n\nexport const history = createHistory({\n    basename: BASENAME\n});\n\nconst MiniToad = Loadable({\n    loader: () => import('../pages/MiniToad'),\n    loading: () => Splash\n});\n\nconst Error = Loadable({\n    loader: () => import('../pages/Error'),\n    loading: () => Splash\n});\n\nconst AppRouter = () => (\n    <Router history={history}>\n        <div>\n            <Switch>\n                <Route path='/' component={Splash} exact={true} />\n                <PrivateRoute path='/minitoad' component={MiniToad} />\n                <Route path='/error' component={Error} exact={true} />\n                <Route component={Error} />\n            </Switch>\n        </div>\n    </Router>\n);\n\nexport default AppRouter;","//gerencia os eventos para a global da query\n//NÃO PODE SOBRESCREVER OS PARÂMETROS\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_DATA':\n            return {\n                ...state,\n                data: action.data,\n                running: false\n            };\n\n        case 'SET_RUNNING':\n            return {\n                ...state,\n                data: undefined,\n                running: true\n            };\n\n        case 'SET_DATA_OBJ':\n            return {\n                ...state,\n                data_obj: action.data,\n                running_obj: false\n            };\n\n        case 'SET_RUNNING_LIST_OBJ':\n            return {\n                ...state,\n                data_obj: undefined,\n                running_obj: true\n            };\n\n        case 'SET_DATA_GET_DDL':\n            return {\n                ...state,\n                data_ddl: action.data,\n                running_ddl: false\n            };\n\n        case 'SET_RUNNING_GET_DDL':\n            return {\n                ...state,\n                data_ddl: undefined,\n                running_ddl: true\n            };\n\n        default: \n            return state;\n    }\n};","//gerencia os eventos para a global do websocket\n//NÃO PODE SOBRESCREVER OS PARÂMETROS\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case 'CONNECT_SERVER':\n            return {\n                conn: action.conn\n            };\n\n        case 'SET_COMPANIES_LIST':\n            return {\n                ...state,\n                companies: action.companies\n            };\n\n        case 'CONNECT_COMPANY':\n            return {\n                ...state,\n                id: action.id,\n                name: action.name\n            };\n            \n        default: \n            return state;\n    }\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { queryReducer, websocketReducer } from '../reducers';\n\n//inclui o compose necessário para a extensão do redux para o chrome\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n//função que cria e retorna o store do redux, combinando todos os reducers\nexport default () => {\n    const store = createStore(\n        combineReducers({\n            query: queryReducer,\n            websocket: websocketReducer\n        }),\n        composeEnhancers(applyMiddleware(thunk)) //adiciona o plugin redux-thunk que permite eventos assíncronos\n    );\n\n    return store;\n}","import { connectServer, connectCompany, startListCompanies, listCompanies } from './actions/websocket';\nimport { setData, setDataObj, setDataGetDDL } from './actions/query';\nimport { history } from './routers';\n\n//função que inicializa o websocket\n/* params:\n    store - store do redux para conseguir disparar ações que mudam o estado global da app\n*/\nexport default async (store) => {\n    //cria o objeto da conexão websocketd\n    const conn = await new WebSocket('ws://gate.gthealth.com.br:8080?id=0');\n\n    //quando abrir a conexão\n    conn.onopen = () => {\n        //cria a conexão do server no state do redux\n        store.dispatch(connectServer({\n            send: (data) => conn.send(JSON.stringify({\n                ...data\n            })) \n        }));\n\n        //dispara a ação de listar empresas\n        store.dispatch(startListCompanies());\n    }\n\n    //evento de quando recebe mensagem\n    conn.onmessage = function(e) {\n        //converte a mensagem para json\n        const data = JSON.parse(e.data);\n\n        if(data.toAction) {\n            switch(data.frontAction) {\n                case 'listCompanies':\n                    store.dispatch(listCompanies(data.response));\n                    break;\n\n                //resposta da ação disparada na websocket.startConnectCompany\n                case 'connectCompany':\n                    store.dispatch(connectCompany(data.from,data.response));\n                    break;\n                \n                //resposta da ação disparada na query.startSelect ou query.startQuery \n                case 'select':\n                case 'query':\n                    store.dispatch(setData(data.response));\n                    break;\n\n                //resposta da ação disparada na query.startListObj\n                case 'listObjects':\n                    store.dispatch(setDataObj(data.response));\n                    break;\n\n                //resposta da ação disparada na query.startGetDDL\n                case 'getDDL':\n                    store.dispatch(setDataGetDDL(data.response[0]['DDL']));\n                    break;\n            }\n        } else if(data.status == -1) {\n            history.push({\n               pathname: '/error', \n               state: {\n                   message: data.response\n               } \n            });\n        }\n    };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport AppRouter from './routers';\nimport configureStore from './store/configureStore';\nimport connectWebsocket from './websocket';\nimport theme from './themes';\nimport 'normalize.css/normalize.css'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'ladda/dist/ladda.min.css';\n\n//pega o store do redux\nconst store = configureStore();\n\n//cria os providers\nconst jsx = (\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <AppRouter />\n        </ThemeProvider> \n    </Provider>\n);\n\n//renderiza o jsx no html\nReactDOM.render(jsx, document.getElementById('app'));\n\n//inicializa o websocket\nconnectWebsocket(store);","import React from 'react';\nimport Select from 'react-select';\nimport styled from 'styled-components';\n\n//componente para corrigir o texto do plugin\n// props são os usados pelo plugin react-select, \n// ver documentação para saber mais : http://react-select.com/home\nexport default (props) => {\n    //container que corrige a cor do texto\n    const SelectContainer = styled.div`\n        color: ${({ theme }) => theme.palette.black};\n    `;\n\n    return (\n        <SelectContainer>\n            <Select {...props}/>\n        </SelectContainer>\n    );\n}","import React from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\n\n//container para as abas\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\n/* props:\n    tabs - array na estrutura [][content -> conteúdo da página da aba, navContent -> conteúdo do titulo]\n    activeTab - aba ativa\n*/\nexport default class Tabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        /*define o estado inicial\n            activeTab - aba ativa\n        */\n        this.state = {\n            activeTab: (props.activeTab !== undefined) ? props.activeTab : 0\n        };\n    }\n\n    //pega a aba ativa\n    getActiveTab = () => {\n        return (this.props.activeTab !== undefined) ? this.props.activeTab : this.state.activeTab;\n    }\n\n    //handle do clique da aba\n    toggle = (tab) => {\n        const { onChangeTab } = this.props;\n\n        if (this.getActiveTab() !== tab) {\n            if(onChangeTab) {\n                onChangeTab(tab);\n            }\n\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    //renderiza o conteúdo das abas\n    renderTabContent(){\n        return this.props.tabs.map((tab,i) => (\n            <TabPane className=\"h-100\" tabId={i} key={i}>{tab.content}</TabPane>\n        ));\n    }\n\n    //renderiza o conteúdo do titulo das abas\n    renderTabNav(){\n        const activeTab = this.getActiveTab();\n\n        return this.props.tabs.map((tab,i) => (\n            <NavItem key={i}>\n                <NavLink \n                    className={classnames({ active: activeTab === i })}\n                    onClick={() => { this.toggle(i); }}\n                >\n                    {tab.navContent}\n                </NavLink>\n            </NavItem>\n        ));\n    }\n\n    render() {\n        const activeTab = this.getActiveTab();\n\n        return (\n            <Container>\n                <Nav tabs>\n                    {this.renderTabNav()}\n                </Nav>\n                <TabContent className=\"h-100\" activeTab={activeTab}>\n                    {this.renderTabContent()}\n                </TabContent>\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport { Table } from 'reactstrap';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\n/* props\n    data: - dados para mostrar na tabela na estrutura: [linha][nome_coluna]\n*/\nexport default ({ data }) => {\n    //renderiza o header da tabela\n    const renderTableHeader = (data) => {\n        return Object.keys(data[0]).map((column,i) => (\n            <th key={i}>{column}</th>\n        ));\n    }\n\n    //renderiza o body da tabela\n    const renderTableBody = (data) => {\n        return data.map((row,i) => (\n            <tr key={i}>\n                {Object.keys(row).map((column,j) => (\n                    <td key={j}>{row[column]}</td>\n                ))}\n            </tr>\n        ));\n    }\n\n    return (\n        <Scrollbars>\n            <Table>\n                <thead>\n                    <tr>\n                        {renderTableHeader(data)}\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderTableBody(data)}\n                </tbody>\n            </Table>\n        </Scrollbars>\n    );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem \n} from 'reactstrap';\nimport theme from '../themes';\n\nconst CenterContent = styled.div`\n    margin: 0 ${theme.spacing.small}px;\n    flex: 1;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n\n//cria um componente estilizado para o header\nconst Header = styled.div`\n    align-items: center;\n    background-color: ${theme.palette.primary};\n    box-sizing: border-box;\n    color: ${theme.palette.white};\n    display: flex;\n    flex-direction: row;\n    min-height: 48px;\n    max-height: 48px;\n    justify-content: flex-start;\n    padding: ${theme.spacing.small}px;\n    width: 100%;\n`;\n\n/* props:\n    leftContent - conteúdo para colocar a esquerda\n    centerContent - conteúdo do centro\n    rightContent - conteúdo para colocar a direita\n*/\nexport default ({ leftContent, centerContent, rightContent }) => (\n    <Header>\n        {leftContent} \n        \n        <CenterContent>{centerContent}</CenterContent>\n\n        {rightContent}\n    </Header>\n);","import React from 'react';\nimport styled from 'styled-components';\nimport Spinner from 'react-spinkit';\nimport theme from '../themes';\n\n//container que centraliza o spinner\nconst SpinnerContainer = styled.div` \n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n    background-color: ${({ theme }) => theme.palette.light};\n    display: flex;\n    flex-direction: column;\n    padding: ${({ theme }) => theme.spacing.small}px;\n`;\n\n/* props:\n    data - dados do resultado\n    running - mostra o loading\n*/\nexport default ({ color }) => (\n    <SpinnerContainer>\n        <Spinner \n            name=\"ball-spin-fade-loader\" \n            color={color || theme.palette.primary} \n            fadeIn=\"none\"\n        />\n    </SpinnerContainer>\n)","//concentra o export de todos os objetos da pasta\nexport { default as Select } from './Select';\nexport { default as Tabs } from './Tabs';\nexport { default as Table } from './Table';\nexport { default as Header } from './Header';\nexport { default as Loading } from './Loading';","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport theme from '../../themes';\nimport { FaExclamationTriangle } from 'react-icons/fa';\n\n//cria o fundo vermelho\nconst Background = styled.div`\n    background-color: ${theme.palette.danger};\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: ${theme.palette.white};\n`;\n\n//cria o texto estilizado\nconst Text = styled.span`\n    color: ${theme.palette.white};\n    font-family: ${theme.font};\n    font-size: ${theme.sizes.regular};\n    margin-top: ${theme.spacing.large}px;\n`;\n\n//container para estilizar o icone\nconst WarnIcon = styled.span`\n    color: ${theme.palette.white};\n    font-size:64px;\n`;\n\n/* props:\n    location.state.message - texto para exibir(passado pelo history.push do route)\n*/\nexport default class ErrorPage extends Component{\n    render() {\n        const message = (this.props.location.state && this.props.location.state.message);\n\n        return (\n            <Background>\n                <WarnIcon><FaExclamationTriangle /></WarnIcon>\n                <Text>{(message) ? message : 'Página não encontrada'}</Text>\n            </Background>\n        );\n    }\n} ","// ações do reducer query \n\n//define o estado de executando query\nexport const setRunning = () => ({\n    type: 'SET_RUNNING'\n});\n\n//define o estado de carregando lista de objeto\nexport const setRunningListObj = () => ({\n    type: 'SET_RUNNING_LIST_OBJ'\n});\n\n//define o estado de carrengado ddl\nexport const setRunningGetDDL = () => ({\n    type: 'SET_RUNNING_GET_DDL'\n});\n\n//dispara a ação de select no websocket e ativa o loading\n/* params:\n    query - select a ser executado\n*/\nexport const startSelect = (query) => {\n    return (dispatch, getState) => {\n        const { conn, id } = getState().websocket;\n\n        conn.send({\n            action: 'select',\n            frontAction: 'select',\n            to: id,\n            query\n        });\n        \n        dispatch(setRunning());\n    }\n};\n\n//dispara a ação de runquery no websocket e ativa o loading\n/* params: \n    query - query a ser executada\n*/\nexport const startQuery = (query) => {\n    return (dispatch, getState) => {\n        const { conn, id } = getState().websocket;\n\n        conn.send({\n            action: 'runquery',\n            frontAction: 'query',\n            to: id,\n            query\n        });\n\n        dispatch(setRunning());\n    }\n};\n\n//dispara a ação de select para pegar uma lista de objetos e ativa o loading da lista de objetos\n/* params:\n    type - string do tipo de objeto em maiúscula\n*/\nexport const startListObjects = (type) => {\n    return (dispatch, getState) => {\n        const { conn, id } = getState().websocket;\n\n        //o select para jobs é diferente\n        const query = (type != 'PROCOBJ') ? `SELECT OBJECT_NAME FROM user_objects WHERE object_type = '${type}' ORDER BY OBJECT_NAME` \n                                    : \"SELECT JOB_NAME AS OBJECT_NAME FROM user_scheduler_jobs ORDER BY OBJECT_NAME\";\n\n        conn.send({\n            action: 'select',\n            frontAction: 'listObjects',\n            to: id,\n            query\n        });\n\n        dispatch(setRunningListObj());\n    }\n};\n\n//dispara a ação de select para pegar o ddl do objeto e ativa o loading de carregar o ddl\n/* params:\n    type - string do tipo de objeto em maiúsculo\n    object - nome do objeto em maiúsculo\n*/\nexport const startGetDDL = (type, object) => {\n    return (dispatch, getState) => {\n        const { conn, id } = getState().websocket;\n        const query = `SELECT DBMS_METADATA.GET_DDL('${type}','${object}') as DDL FROM DUAL`;\n\n        conn.send({\n            action: 'select',\n            frontAction: 'getDDL',\n            to: id,\n            query\n        });\n\n        dispatch(setRunningGetDDL());\n    }\n};\n\n//atualiza os dados globais do resultado da query\n/* params:\n    data - dados do resultado\n*/\nexport const setData = (data) => ({\n    type: 'SET_DATA',\n    data\n});\n\n//atualiza os dados globais da lista de objetos\n/* params: \n    data - dados da lista de objetos\n*/\nexport const setDataObj = (data) => ({\n    type: 'SET_DATA_OBJ',\n    data\n});\n\n//atualiza os dados globais do ddl aberto\n/* params:\n    data - dados do ddl aberto\n*/\nexport const setDataGetDDL = (data) => ({\n    type: 'SET_DATA_GET_DDL',\n    data\n});"],"sourceRoot":""}