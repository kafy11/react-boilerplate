{"version":3,"sources":["webpack:///./src/templates/Page.js","webpack:///./src/templates/PageWithSidebar.js","webpack:///./src/pages/MiniToad/ObjectItem.js","webpack:///./src/pages/MiniToad/Sidebar.js","webpack:///./src/pages/MiniToad/index.js"],"names":["Company","styled","b","_templateObject","theme","spacing","small","palette","warning","sizes","big","ContentContainer","div","_templateObject2","regular","font","PageContainer","_templateObject3","light","StyledFaBars","FaBars","_templateObject4","NAV_ITEMS","to","label","Page","renderNavCollapsed","react_default","a","createElement","reactstrap_es","nav","color","white","right","map","_ref","react_router_dom_es","Component","_this$props","this","props","children","leftContentHeader","rightContentHeader","company","className","components","leftContent","centerContent","title","rightContent","SidebarContainer","PageWithSidebar_templateObject","primary","PageWithSidebar_templateObject2","mql","window","matchMedia","PageWithSidebar","_this","PageWithSidebar_classCallCheck","PageWithSidebar_possibleConstructorReturn","PageWithSidebar_getPrototypeOf","call","onSetSidebarOpen","open","onSidebarToggle","setState","sidebarOpen","mediaQueryChanged","bigScreen","matches","renderSidebarContent","sidebarContent","state","fixed","prevProps","sidebarOpened","addListener","removeListener","_this2","onClick","toggleSidebarIcon","PageWithSidebar_StyledFaBars","rightSidebar","react_sidebar_esm","sidebar","docked","onSetOpen","styles","zIndex","pullRight","Page_Page","_extends","renderButton","ObjectItem","li","ObjectItem_templateObject","black","grayscale","MiniToad_ObjectItem","data","OBJECT_NAME","OBJECT_OPTIONS","value","Sidebar_templateObject","ObjectsContainer","Sidebar_templateObject2","ObjectList","ul","Sidebar_templateObject3","SpinnerContainer","extend","Sidebar_templateObject4","Filter","input","_templateObject5","xsmall","Sidebar","Sidebar_classCallCheck","Sidebar_possibleConstructorReturn","Sidebar_getPrototypeOf","handleFilterChange","e","filter","target","renderList","objects","onOpenObject","RegExp","placeholder","onChange","react_custom_scrollbars_lib","object","match","key","_this$props2","onChangeType","selectedType","running","dist_default","name","fadeIn","Sidebar_SidebarContainer","options","QueryTab","Loadable","loader","Promise","all","__webpack_require__","then","bind","loading","Loading","ResultTab","StyledFaDatabase","FaDatabase","MiniToad_templateObject","MiniToad","MiniToad_classCallCheck","MiniToad_possibleConstructorReturn","MiniToad_getPrototypeOf","handleExecute","query","startQuery","startSelect","toUpperCase","trim","startsWith","handleChangeTab","tab","activeTab","handleSidebarToggle","opened","handleChangeType","type","startListObjects","handleOpenObject","startGetDDL","renderSidebar","runningListObj","Sidebar_Sidebar","prevState","ddl","_this$props3","runningGetDDL","tabs","content","onExecute","loadingQuery","navContent","PageWithSidebar_PageWithSidebar","onChangeTab","mapDispatchToProps","connect","websocket","data_obj","running_obj","data_ddl","running_ddl"],"mappings":"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","file":"js/2.7d16cbf3e2eacfd560a3.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport {\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem \n} from 'reactstrap';\nimport { FaBars } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport theme from '../themes';\nimport { Header } from '../components';\n\nconst Company = styled.b`\n    margin: 0 ${theme.spacing.small}px;\n    color: ${theme.palette.warning};\n    font-size: ${theme.sizes.big};\n    flex: 1;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n\n//componente estilizado para organizar o header e content da p√°gina\nconst ContentContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    font-size: ${theme.sizes.regular};\n    font-family: ${theme.font};\n`;\n\n//componente estilizado para o conte√∫do da p√°gina\nconst PageContainer = styled.div`\n    flex: 1;\n    width: 100%;\n    background-color: ${theme.palette.light};\n    display: flex;\n    flex-direction: column;\n`;\n\nconst StyledFaBars = styled(FaBars)`\n    font-size: 1rem;\n`\n\nconst NAV_ITEMS = [{\n    to: '/minitoad',\n    label: 'Minitoad'\n}];\n\n/* props:\n    children - conte√∫do da p√°gina\n    company - nome da empresa\n    leftContentHeader - conte√∫do para colocar a esquerda do titulo\n    rightContentHeader - conte√∫do para colocar a direita do t√≠tulo\n    className - classes passadas por styled()\n*/\nexport default class Page extends Component {\n    renderNavCollapsed = () => (\n        <UncontrolledDropdown>\n            <DropdownToggle nav>\n                <StyledFaBars color={theme.palette.white}/>\n            </DropdownToggle>\n            <DropdownMenu right>\n                {NAV_ITEMS.map(({ label, to }) => (\n                    <DropdownItem>\n                        <Link to={to}>{label}</Link>\n                    </DropdownItem>\n                ))}\n            </DropdownMenu>\n        </UncontrolledDropdown>\n    )\n\n    render() {\n        const { children, leftContentHeader, rightContentHeader, company, className } = this.props;\n        return (\n            <ContentContainer>\n                <Header \n                    leftContent={leftContentHeader}\n                    centerContent={(\n                        <Company title={company}>\n                            {company}\n                        </Company>\n                    )}\n                    rightContent={(\n                        <div>\n                            {this.renderNavCollapsed()}\n                            {rightContentHeader}\n                        </div>\n                    )}\n                />\n\n                <PageContainer className={className}>\n                    {children}\n                </PageContainer>\n            </ContentContainer>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Sidebar from 'react-sidebar';\nimport { Button } from 'reactstrap';\nimport { FaBars } from 'react-icons/fa';\nimport theme from '../themes';\nimport styled from 'styled-components';\nimport Page from './Page';\n\n//cria um componente estilizado para o container da barra lateral\nconst SidebarContainer = styled.div`\n    height: 100%;\n    box-sizing: border-box;\n    padding: ${theme.spacing.small}px;\n    min-width: 250px;\n    max-width: 250px;\n    font-family: ${theme.font};\n    font-size: ${theme.sizes.regular};\n    background-color: ${theme.palette.primary};\n    color: ${theme.palette.white};\n`;\n\n//cria um componente que define a cor do texto (usado para o icone)\nconst StyledFaBars = styled(FaBars)`\n    color: ${theme.palette.white};\n`;\n\n//cria o media query\nconst mql = window.matchMedia(`(min-width: 800px)`);\n\nexport default class PageWithSidebar extends Component{\n    constructor(props) {\n        super(props);\n\n        /* cria o estado inicial do componente\n            bigScreen - se √© tela grande ou n√£o \n            sidebarOpen - se barra lateral est√° aberta ou n√£o\n        */\n        this.state = {\n            bigScreen: (props.fixed) ? mql.matches : false,\n            sidebarOpen: false\n        };\n    }\n\n    //verifica se o componente pai mandou abrir/fechar a barra lateral\n    componentDidUpdate(prevProps){\n        if(!this.state.bigScreen && prevProps.sidebarOpened != this.props.sidebarOpened) {\n            this.setState({ sidebarOpen: this.props.sidebarOpened });\n        }\n    }\n\n    //quando componente inicia, seta o listener do media query\n    componentWillMount() {\n        mql.addListener(this.mediaQueryChanged);\n    }\n\n    //quando componente sai, remove o listener do media query\n    componentWillUnmount() {\n        mql.removeListener(this.mediaQueryChanged);\n    }\n\n    //evento que abre/fecha a barra lateral\n    //params:\n    //open - boolean - (true: abre barra lateral, false: fecha barra lateral)\n    onSetSidebarOpen = (open) => {\n        const { onSidebarToggle } = this.props;\n\n        if(onSidebarToggle){\n            onSidebarToggle(open);\n        }\n\n        this.setState(() => ({ sidebarOpen: open }));\n    }\n\n    //quando media query definido no come√ßo do arquivo muda, \n    //passa se a media query foi atendida ou n√£o para o state (mql.matches)\n    mediaQueryChanged = () => {\n        this.setState(() => ({ bigScreen: mql.matches, sidebarOpen: false }));\n    }\n\n    //se for uma tela pequena, mostra o bot√£o\n    renderButton() {\n        if(!this.state.bigScreen) {\n            return (\n                <Button \n                    color=\"link\"\n                    onClick = {() => this.onSetSidebarOpen(true)}\n                >\n                    {(this.props.toggleSidebarIcon || <StyledFaBars />)}\n                </Button>\n            );\n        }\n    }\n\n    //renderiza o conte√∫do da barra lateral\n    renderSidebarContent = () => (\n        <SidebarContainer>\n            {this.props.sidebarContent}\n        </SidebarContainer>\n    );\n\n    render() {\n        const { rightSidebar } = this.props;\n\n        return (\n            <Sidebar\n                sidebar={this.renderSidebarContent()}\n                open={this.state.sidebarOpen}\n                docked={this.state.bigScreen}\n                onSetOpen={this.onSetSidebarOpen}\n                styles={{ sidebar: { zIndex: 999 } }}\n                pullRight={rightSidebar}\n            >\n                <Page {...this.props} \n                    leftContentHeader={(!rightSidebar && this.renderButton())}\n                    rightContentHeader={(rightSidebar && this.renderButton())}  \n                />\n            </Sidebar>\n        );\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport theme from '../../themes';\n\n//container do item do objeto\nconst ObjectItem = styled.li`\n    background-color: ${theme.palette.white};\n    color: ${theme.palette.black};\n    padding: ${theme.spacing.small}px;\n    border-bottom: 1px solid ${theme.palette.grayscale[0]};\n    overflow: hidden;\n    cursor: pointer;\n    text-overflow: ellipsis;\n`;\n\n/* props:\n    data - dados do objeto\n    onClick - callback do clique no objeto\n*/\nexport default ({ data, onClick }) => (\n    <ObjectItem \n        title={data.OBJECT_NAME}\n        onClick={() => onClick(data)}\n    >\n        {data.OBJECT_NAME}\n    </ObjectItem>\n);","import React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport styled from 'styled-components';\nimport Spinner from 'react-spinkit';\nimport { Select } from '../../components';\nimport ObjectItem from './ObjectItem';\nimport theme from '../../themes';\n\n//array de tipos de objetos do select\nconst OBJECT_OPTIONS = [\n    { value: 'TABLE', label: 'Tabelas' },\n    { value: 'VIEW', label: 'Views' },\n    { value: 'PROCEDURE', label: 'Procedures' },\n    { value: 'FUNCTION', label: 'Fun√ß√µes' },\n    { value: 'TRIGGER', label: 'Triggers' },\n    { value: 'PROCOBJ', label: 'Jobs' }\n]; \n\n//container que engloba o conte√∫do da barra lateral\nconst SidebarContainer = styled.div`\n    display:flex;\n    flex-direction: column;\n    height: 100%;\n`;\n\nconst ObjectsContainer = styled.div`\n    flex: 1;\n    padding: 0;\n    display:flex;\n    flex-direction: column;\n    margin-top: ${theme.spacing.small}px;\n`;\n\n//lista de objetos\nconst ObjectList = styled.ul`\n    flex: 1;\n    list-style: none;\n    padding: 0;\n    margin-top: ${theme.spacing.small}px;\n`;\n\n//container que centraliza o spinner\nconst SpinnerContainer = SidebarContainer.extend` \n    justify-content: center;\n    align-items: center;\n`;\n\n//input de filtro dos objetos\nconst Filter = styled.input`\n    width: 100%;\n    padding: ${theme.spacing.xsmall}px;\n    border-radius: ${theme.spacing.xsmall}px;\n`;\n\n/* props:\n    objects - array de objetos para a lista \n    onOpenObject - callback disparado no clique do objeto (params: dados do objeto)\n    onChangeType - callback disparado ao selecionar um tipo de objeto (params: dados do tipo)\n    selectedType - tipo de objeto selecionado\n    running - mostra o loading\n*/\nexport default class Sidebar extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            filter: ''\n        };\n    }\n\n    //handle que pega o conte√∫do do textarea\n    handleFilterChange = (e) => {\n        const filter = e.target.value;\n        this.setState(() => ({ filter }));\n    }\n\n    //renderiza a lista de objetos\n    renderList = () => {\n        const { objects, onOpenObject } = this.props;\n        if(objects) {\n            //cria o regex para filtrar\n            const filter = new RegExp(this.state.filter,'gi');\n\n            return (\n                <ObjectsContainer>\n                    <Filter \n                        placeholder=\"Filtrar objetos\"\n                        value={this.state.filter}\n                        onChange={this.handleFilterChange}\n                    />\n                    <ObjectList>\n                        <Scrollbars>\n                            {objects //filtra os objetos e gera os itens da lista\n                                .filter((object) => object.OBJECT_NAME.match(filter))\n                                .map((object) => (\n                                    <ObjectItem \n                                        key={object.OBJECT_NAME}\n                                        data={object} \n                                        onClick={onOpenObject}\n                                    />\n                            ))}\n                        </Scrollbars>\n                    </ObjectList>\n                </ObjectsContainer>\n            );\n        }\n    }\n\n    render() {\n        const { onChangeType, selectedType, running } = this.props;\n\n        //mostra o spinner\n        if(running) {\n            return (\n                <SpinnerContainer>\n                    <Spinner \n                        name=\"ball-spin-fade-loader\" \n                        color={theme.palette.white} \n                        fadeIn=\"none\"\n                    />\n                </SpinnerContainer>\n            );\n        }\n\n        return (\n            <SidebarContainer>\n                <Select \n                    placeholder=\"Tipo de objeto\"\n                    value={selectedType}\n                    options={OBJECT_OPTIONS}\n                    onChange={onChangeType}\n                />\n                \n                {this.renderList()}\n            </SidebarContainer>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { FaDatabase } from 'react-icons/fa';\nimport Loadable from 'react-loadable';\nimport PageWithSidebar from '../../templates/PageWithSidebar';\nimport { startQuery, startSelect, startListObjects, startGetDDL } from '../../actions/query';\nimport { Tabs, Loading } from '../../components';\nimport Sidebar from './Sidebar';\n\nconst QueryTab = Loadable({\n    loader: () => import('./QueryTab'),\n    loading: () => Loading\n});\n\nconst ResultTab = Loadable({\n    loader: () => import('./ResultTab'),\n    loading: () => Loading\n});\n\nconst StyledFaDatabase = styled(FaDatabase)`\n    color: ${({ theme }) => theme.palette.white};\n`;\n\n/* props:\n    data - dados do resultado da query\n    running - mostra loading da aba de resultados\n    objects - dados da lista de objetos\n    runningListObj - mostra o loading da lista de objetos\n    ddl - dados do ddl aberto\n    runningGetDDL - mostra o loading da aba de query\n*/\nclass MiniToad extends Component{\n    constructor(props){\n        super(props);\n\n        /* Cria o estado inicial da tela\n            activeTab: aba ativa da tela (0 - QueryTab, 1 - ResultTab)\n            selectedType: tipo de objeto selecionado na barra lateral\n            sidebarOpened: se barra lateral est√° aberta ou n√£o\n        */\n        this.state = {\n            activeTab: 0,\n            selectedType: null,\n            sidebarOpened: false\n        };\n    }\n\n    //Verifica se recebeu uma nova ddl e muda para a aba da query\n    componentDidUpdate(prevProps,prevState){\n        if(prevProps.ddl != this.props.ddl) {\n            this.setState({\n                activeTab: 0\n            });\n        }\n    }\n\n    //handle do clique do bot√£o Executar\n    //verifica se √© select ou query e chama as a√ß√£o certa\n    //depois muda para a aba de resultados\n    handleExecute = (query) => {\n        const { startQuery, startSelect } = this.props;\n\n        if(query.toUpperCase().trim().startsWith('SELECT')){\n            startSelect(query);\n        } else {\n            startQuery(query);\n        }\n        \n        this.handleChangeTab(1);\n    }\n\n    //handle para pegar a aba ativa e garantir sempre o estado sempre esteja atualizado\n    handleChangeTab = (tab) => {\n        this.setState(() => ({\n            activeTab: tab\n        }));\n    }\n\n    //handle para pegar o estado da barra lateral e garantir sempre que o estado esteja atualizado\n    handleSidebarToggle = (opened) => {\n        this.setState(() => ({\n            sidebarOpened: opened\n        }));\n    }\n\n    //handle para pegar o estado do select de tipo de objeto e garantir sempre que o estado esteja atualizado\n    handleChangeType = (type) => {\n        this.props.startListObjects(type.value);\n        this.setState(() => ({ selectedType: type }));\n    }\n\n    //handle para o clique do objeto na barra lateral\n    //inicia a a√ß√£o de getDDL e fecha a barra lateral\n    handleOpenObject = (object) => {\n        this.props.startGetDDL(this.state.selectedType.value,object.OBJECT_NAME);\n        this.setState(() => ({ sidebarOpened: false }));\n    }\n\n    //renderiza o conte√∫do da barra lateral\n    renderSidebar = () => {\n        const { objects, runningListObj } = this.props;\n        return (\n            <Sidebar \n                objects={objects} \n                selectedType={this.state.selectedType}\n                running={runningListObj} \n                onChangeType={this.handleChangeType} \n                onOpenObject={this.handleOpenObject}\n            />\n        );\n    }\n\n    render() {\n        const { data, running, runningGetDDL, ddl, company } = this.props;\n\n        //cria o array das abas\n        const tabs = [{\n            content: <QueryTab \n                        onExecute={this.handleExecute}\n                        running={running}\n                        loadingQuery={runningGetDDL} \n                        query={ddl}\n                    />,\n            navContent: \"Executar\"\n        },{\n            content: <ResultTab \n                        data={data} \n                        running={running} \n                    />,\n            navContent: \"Resultado\"\n        }];\n\n        return (\n            <PageWithSidebar \n                sidebarContent={this.renderSidebar()}\n                sidebarOpened={this.state.sidebarOpened}\n                onSidebarToggle={this.handleSidebarToggle}\n                company={company}\n                fixed={true}\n                toggleSidebarIcon={<StyledFaDatabase />}\n            >\n                <Tabs \n                    tabs={tabs} \n                    activeTab={this.state.activeTab}\n                    onChangeTab={this.handleChangeTab}\n                />\n            </PageWithSidebar>\n        );\n    }\n}\n\n//passa as a√ß√µes como props\nconst mapDispatchToProps = {\n    startQuery,\n    startSelect,\n    startListObjects,\n    startGetDDL\n};\n\n//passa o state do redux para props\nconst mapStateToProps = (state) => ({\n    company: state.websocket.name,\n    data: state.query.data,\n    running: state.query.running,\n    objects: state.query.data_obj,\n    runningListObj: state.query.running_obj,\n    ddl: state.query.data_ddl,\n    runningGetDDL: state.query.running_ddl,\n});\n\n//exporta o componente com o redux\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniToad);"],"sourceRoot":""}