{"version":3,"sources":["webpack:///./src/pages/MiniToad/QueryTab.js"],"names":["PageContainer","styled","div","_templateObject","theme","palette","light","QueryInput","textarea","_templateObject2","spacing","medium","ButtonsContainer","_templateObject3","QueryTab","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleQueryChange","e","query","target","value","setState","handleExecute","onExecute","state","Component","prevProps","prevState","_this$props","loadingQuery","running","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_3__","onChange","react_ladda__WEBPACK_IMPORTED_MODULE_2___default","loading","onClick","data-color","data-size","S","data-style","CONTRACT","data-spinner-size","data-spinner-color","white","data-spinner-lines"],"mappings":"+lDAOA,IAAMA,EAAgBC,IAAOC,IAAVC,IAGKC,IAAMC,QAAQC,OAMhCC,EAAaN,IAAOO,SAAVC,IAEFL,IAAMM,QAAQC,QAKtBC,EAAmBX,IAAOC,IAAVW,IAKPT,IAAMM,QAAQC,QASRG,cACjB,SAAAA,EAAYC,GAAM,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACdE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KAmBVO,kBAAoB,SAACC,GACjB,IAAMC,EAAQD,EAAEE,OAAOC,MACvBV,EAAKW,SAAS,kBAASH,YAtBTR,EA0BlBY,cAAgB,WACZZ,EAAKD,MAAMc,UAAUb,EAAKc,MAAMN,QAtBhCR,EAAKc,OACDN,MAAO,IANGR,8OADgBe,2GAYfC,EAAWC,GACvBD,EAAUR,OAASN,KAAKH,MAAMS,OAC7BN,KAAKS,UACDH,MAAON,KAAKH,MAAMS,yCAgBrB,IAAAU,EAC6BhB,KAAKH,MAA/BoB,EADHD,EACGC,aAAcC,EADjBF,EACiBE,QAGtB,OAAGD,EACQE,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAIPH,EAAAC,EAAAC,cAACvC,EAAD,KACIqC,EAAAC,EAAAC,cAAChC,GACGmB,MAAOR,KAAKY,MAAMN,MAClBiB,SAAUvB,KAAKI,oBAEnBe,EAAAC,EAAAC,cAAC3B,EAAD,KACIyB,EAAAC,EAAAC,cAACG,EAAAJ,GACGK,QAASP,EACTQ,QAAS1B,KAAKU,cACdiB,aAAW,OACXC,YAAWC,IACXC,aAAYC,WACZC,oBAAmB,GACnBC,qBAAoB/C,IAAMC,QAAQ+C,MAClCC,qBAAoB,IARxB","file":"js/3.fbec97b2a341e36a764d.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport LaddaButton, { S, CONTRACT } from 'react-ladda';\nimport { Loading } from '../../components';\nimport theme from '../../themes';\n\n//container da página\nconst PageContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    background-color: ${theme.palette.light};\n    display: flex;\n    flex-direction: column;\n`;\n\n//textarea\nconst QueryInput = styled.textarea`\n    flex: 1;\n    margin: ${theme.spacing.medium}px;\n    resize: none;\n`;\n\n//container do botão no fim da página\nconst ButtonsContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    flex-direction: row;\n    padding: ${theme.spacing.medium}px;\n    padding-top: 0px;\n`;\n\n/* props: \n    onExecute - callback para o evento de click do botão executar(params: query do textarea)\n    loadingQuery - mostra o loading da página\n    running - mostra o loading do botão executar\n*/\nexport default class QueryTab extends Component{\n    constructor(props){\n        super(props);\n        /* cria o estado inicial \n            query - conteúdo do textarea\n        */\n        this.state = {\n            query: ''\n        };\n    }\n\n    //verifica se recebeu uma query do componente pai\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.query != this.props.query){\n            this.setState({\n                query: this.props.query\n            });\n        }\n    }\n\n    //handle que pega o conteúdo do textarea\n    handleQueryChange = (e) => {\n        const query = e.target.value;\n        this.setState(() => ({ query }));\n    }\n\n    //handle que pega o click do botão executar e dispara o evento onExecute\n    handleExecute = () => {\n        this.props.onExecute(this.state.query);\n    }\n\n    render() {\n        const { loadingQuery, running } = this.props;\n\n        //exibe o loading da página\n        if(loadingQuery){\n            return <Loading />;\n        }\n\n        return (\n            <PageContainer>\n                <QueryInput \n                    value={this.state.query}\n                    onChange={this.handleQueryChange} \n                />\n                <ButtonsContainer>\n                    <LaddaButton\n                        loading={running}\n                        onClick={this.handleExecute}\n                        data-color=\"blue\"\n                        data-size={S}\n                        data-style={CONTRACT}\n                        data-spinner-size={30}\n                        data-spinner-color={theme.palette.white}\n                        data-spinner-lines={12}\n                    >\n                        Executar\n                    </LaddaButton>\n                </ButtonsContainer>\n            </PageContainer>\n        );\n    }\n}"],"sourceRoot":""}